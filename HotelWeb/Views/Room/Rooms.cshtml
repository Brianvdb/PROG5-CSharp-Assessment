@model IEnumerable<DomainModel.HotelRoom>

@{
    ViewBag.Title = "Kamers Beheren";
}

<h1>Beheer Kamers</h1>

<h2>Hotelkamers</h2>

<table>
    <tr>
        <th>
            naam
        </th>
        <th>
            aantal personen
        </th>
        <th>
            kamerstatus
        </th>
        <th>
            minimumprijs
        </th>
        <th>
            openingsdatum
        </th>
        <th>
            sluitdatum
        </th>
        <th>
            prijstarieven
        </th>
        <th>
            beheer
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            Kamer @Html.DisplayFor(modelItem => item.Id)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.NumberOfPersons)
        </td>
        <td>
            @if (DateTime.Now >= item.CloseDate && item.OpenDate < item.CloseDate){
                @Html.Raw("Gesloten");
            }
            else if(item.Bookings == null)
            {
                @Html.Raw("Vrij")
            }
            else
            {
                string status = "Vrij";
                for (int i = 0; i < item.Bookings.Count; i++)
                {
                    if (item.Bookings.ElementAt(i).StartDate >= DateTime.Now && item.Bookings.ElementAt(i).EndDate <= DateTime.Now)
                    {
                        status = "Bezet";
                        break;
                    }
                }
                
                @Html.Raw(status);
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MinPrice)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OpenDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CloseDate)
        </td>
        <td>
            @Html.ActionLink("Bekijken", "RoomPrices", new { id = item.Id })
        </td>
        <td>
            @Html.ActionLink("Bewerken", "EditRoom", new { id=item.Id }) |
            @Html.ActionLink("Verwijderen", "DeleteRoom", new { id=item.Id })
        </td>
    </tr>
}

</table>

<h2>Prijstarieven </h2>

<h2>Kamer toevoegen</h2>

@using (Html.BeginForm())
{
    <fieldset>
        <legend>Nieuwe kamer</legend>
        <div class="editor-label">
            @Html.Label("Aantal personen")
        </div>
        <div class="editor-field">
            <select id="personen" name="personen">
                <option value="2">2 persoons</option>
                <option value="3">3 persoons</option>
                <option value="5">5 persoons</option>
            </select>
        </div>
        <div class="editor-label">
            @Html.Label("Minimumprijs")
        </div>
        <div class="editor-field">
            @Html.TextBox("minprice", null, new { type = "number", step = "0.01" })
        </div>
        <p>
            <input type="submit" value="Toevoegen" />
        </p>
</fieldset>
}

<h2>Prijstarief voor een kamer instellen</h2>
@using (Html.BeginForm("AddRoomPrice", "Home"))
{
    <fieldset>
        <legend>Nieuw prijstarief</legend>
        <div class="editor-label">
            @Html.Label("Kamer")
        </div>
        <div class="editor-field">
            @{
                List<SelectListItem> listItems = new List<SelectListItem>();
                foreach (var item in Model)
                {
                    listItems.Add(new SelectListItem { Text = "Kamer " + item.Id, Value = item.Id + "" });
                }
    
                @Html.DropDownList("room", new SelectList(listItems, "Value", "Text"))
            }
        </div>
        <div class="editor-label">
            @Html.Label("Begindatum")
        </div>
        <div class="editor-field">
            @Html.TextBox("startdate", null, new { type = "date" })
        </div>
        <div class="editor-label">
            @Html.Label("Einddatum")
        </div>
        <div class="editor-field">
            @Html.TextBox("enddate", null, new { type = "date" })
        </div>
        <div class="editor-label">
            @Html.Label("Minimumprijs")
        </div>
        <div class="editor-field">
            @Html.TextBox("price", null, new { type = "number", step = "0.01" })
        </div>
        <p>
            <input type="submit" value="Toevoegen" />
        </p>
    </fieldset>
    
}

